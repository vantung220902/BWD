function Validator(options){function getParent(element,selector){while(element.parentElement){if(element.parentElement.matches(selector)){return element.parentElement}
element=element.parentElement}}
var selectorRules={};function validate(inputElement,rule){var errorElement=getParent(inputElement,options.formGroupSelector).querySelector(options.errorSelector);var erroeMessage;var rules=selectorRules[rule.selector];for(var i=0;i<rules.length;++i){switch(inputElement.type){case 'radio':case 'checbox':erroeMessage=rules[i](document.querySelector(rule.selector+':checked'));break;default:erroeMessage=rules[i](inputElement.value)}
if(erroeMessage)break}
if(erroeMessage){errorElement.innerText=erroeMessage;getParent(inputElement,options.formGroupSelector).classList.add('invalid')}else{errorElement.innerText="";getParent(inputElement,options.formGroupSelector).classList.remove('invalid')}
return!erroeMessage}
var formElement=document.querySelector(options.form);if(formElement){formElement.onsubmit=function(e){e.preventDefault();var isFormValid=!0;options.rules.forEach(function(rule){var inputElement=formElement.querySelector(rule.selector);var isValid=validate(inputElement,rule);if(!isValid){isFormValid=!1}});if(isFormValid){if(typeof options.onSubmit=='function'){var enabledInputs=formElement.querySelectorAll('[name]:not([disabled])');var formValues=Array.from(enabledInputs).reduce(function(values,input){switch(input.type){case 'radio':values[input.name]=formElement.querySelector('input[name="'+input.name+'"]:checked').value;break;case 'checkbox':if(!input.matches(':checked')){values[input.name]="";return values}
if(!Array.isArray(values[input.name])){values[input.name]=[]}
values[input.name].push(input.value);break;case'file':values[input.name]=input.files;break;default:values[input.name]=input.value;break}
return values},{});options.onSubmit(formValues)}else{formElement.submit()}}};options.rules.forEach(function(rule){if(Array.isArray(selectorRules[rule.selector])){selectorRules[rule.selector].push(rule.test)}else{selectorRules[rule.selector]=[rule.test]}
var inputElements=formElement.querySelectorAll(rule.selector);Array.from(inputElements).forEach(function(inputElement){inputElement.onblur=function(){validate(inputElement,rule)};inputElement.oninput=function(){var errorElement=getParent(inputElement,options.formGroupSelector).querySelector(options.errorSelector);errorElement.innerText="";getParent(inputElement,options.formGroupSelector).classList.remove('invalid')};inputElement.onchange=function(){var errorElement=getParent(inputElement,options.formGroupSelector).querySelector(options.errorSelector);errorElement.innerText="";getParent(inputElement,options.formGroupSelector).classList.remove('invalid')}})})}}
Validator.isRequired=function(selector,message){return{selector:selector,test:function(value){return value?undefined:message||"Vui lòng nhập trường này"}}};Validator.isEmail=function(selector,message){return{selector:selector,test:function(value){var regex=/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;return regex.test(value)?undefined:message||'Vui lòng nhập email'}}};Validator.minlength=function(selector,min,message){return{selector:selector,test:function(value){return value.length>=min?undefined:message||`Vui lòng nhập tối thiểu ${min} ký tự`}}};Validator.isConfirmed=function(selector,getConfirmeValue,message){return{selector:selector,test:function(value){return value==getConfirmeValue()?undefined:message||"Giá Trị Nhập Vào Không Chính Xác"}}}